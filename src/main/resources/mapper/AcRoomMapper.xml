<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gbtech.iaaas.mbg.mapper.AcRoomMapper">
  <resultMap id="BaseResultMap" type="com.gbtech.iaaas.mbg.model.AcRoom">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ac_id" jdbcType="INTEGER" property="acId" />
    <result column="room_num" jdbcType="VARCHAR" property="roomNum" />
    <result column="sub_room_num" jdbcType="VARCHAR" property="subRoomNum" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="floor" jdbcType="INTEGER" property="floor" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.gbtech.iaaas.mbg.model.AcRoom">
    <result column="materials" jdbcType="LONGVARCHAR" property="materials" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ac_id, room_num, sub_room_num, type, floor, status, create_time, modify_time
  </sql>
  <sql id="Blob_Column_List">
    materials
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.gbtech.iaaas.mbg.model.AcRoomExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ac_room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.gbtech.iaaas.mbg.model.AcRoomExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ac_room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ac_room
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ac_room
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gbtech.iaaas.mbg.model.AcRoomExample">
    delete from ac_room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gbtech.iaaas.mbg.model.AcRoom">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ac_room (ac_id, room_num, sub_room_num, 
      type, floor, status, 
      create_time, modify_time, materials
      )
    values (#{acId,jdbcType=INTEGER}, #{roomNum,jdbcType=VARCHAR}, #{subRoomNum,jdbcType=VARCHAR}, 
      #{type,jdbcType=TINYINT}, #{floor,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{materials,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gbtech.iaaas.mbg.model.AcRoom">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ac_room
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="acId != null">
        ac_id,
      </if>
      <if test="roomNum != null">
        room_num,
      </if>
      <if test="subRoomNum != null">
        sub_room_num,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="floor != null">
        floor,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="materials != null">
        materials,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="acId != null">
        #{acId,jdbcType=INTEGER},
      </if>
      <if test="roomNum != null">
        #{roomNum,jdbcType=VARCHAR},
      </if>
      <if test="subRoomNum != null">
        #{subRoomNum,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="floor != null">
        #{floor,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="materials != null">
        #{materials,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gbtech.iaaas.mbg.model.AcRoomExample" resultType="java.lang.Long">
    select count(*) from ac_room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ac_room
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.acId != null">
        ac_id = #{record.acId,jdbcType=INTEGER},
      </if>
      <if test="record.roomNum != null">
        room_num = #{record.roomNum,jdbcType=VARCHAR},
      </if>
      <if test="record.subRoomNum != null">
        sub_room_num = #{record.subRoomNum,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.floor != null">
        floor = #{record.floor,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.materials != null">
        materials = #{record.materials,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update ac_room
    set id = #{record.id,jdbcType=INTEGER},
      ac_id = #{record.acId,jdbcType=INTEGER},
      room_num = #{record.roomNum,jdbcType=VARCHAR},
      sub_room_num = #{record.subRoomNum,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      floor = #{record.floor,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      materials = #{record.materials,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ac_room
    set id = #{record.id,jdbcType=INTEGER},
      ac_id = #{record.acId,jdbcType=INTEGER},
      room_num = #{record.roomNum,jdbcType=VARCHAR},
      sub_room_num = #{record.subRoomNum,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      floor = #{record.floor,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gbtech.iaaas.mbg.model.AcRoom">
    update ac_room
    <set>
      <if test="acId != null">
        ac_id = #{acId,jdbcType=INTEGER},
      </if>
      <if test="roomNum != null">
        room_num = #{roomNum,jdbcType=VARCHAR},
      </if>
      <if test="subRoomNum != null">
        sub_room_num = #{subRoomNum,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="floor != null">
        floor = #{floor,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="materials != null">
        materials = #{materials,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.gbtech.iaaas.mbg.model.AcRoom">
    update ac_room
    set ac_id = #{acId,jdbcType=INTEGER},
      room_num = #{roomNum,jdbcType=VARCHAR},
      sub_room_num = #{subRoomNum,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      floor = #{floor,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      materials = #{materials,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gbtech.iaaas.mbg.model.AcRoom">
    update ac_room
    set ac_id = #{acId,jdbcType=INTEGER},
      room_num = #{roomNum,jdbcType=VARCHAR},
      sub_room_num = #{subRoomNum,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      floor = #{floor,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>