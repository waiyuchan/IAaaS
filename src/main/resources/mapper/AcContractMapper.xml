<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gbtech.iaaas.mbg.mapper.AcContractMapper">
  <resultMap id="BaseResultMap" type="com.gbtech.iaaas.mbg.model.AcContract">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="c_unicode" jdbcType="VARCHAR" property="cUnicode" />
    <result column="room_id" jdbcType="INTEGER" property="roomId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="fee_status" jdbcType="TINYINT" property="feeStatus" />
    <result column="fee_order_id" jdbcType="INTEGER" property="feeOrderId" />
    <result column="is_transfer" jdbcType="TINYINT" property="isTransfer" />
    <result column="pre_tenant" jdbcType="VARCHAR" property="preTenant" />
    <result column="is_renew" jdbcType="TINYINT" property="isRenew" />
    <result column="pre_contract_id" jdbcType="INTEGER" property="preContractId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.gbtech.iaaas.mbg.model.AcContract">
    <result column="contract_file_url" jdbcType="LONGVARCHAR" property="contractFileUrl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, c_unicode, room_id, user_id, username, fee_status, fee_order_id, is_transfer, 
    pre_tenant, is_renew, pre_contract_id, status, create_time, modify_time
  </sql>
  <sql id="Blob_Column_List">
    contract_file_url
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.gbtech.iaaas.mbg.model.AcContractExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ac_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.gbtech.iaaas.mbg.model.AcContractExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ac_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ac_contract
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ac_contract
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gbtech.iaaas.mbg.model.AcContractExample">
    delete from ac_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gbtech.iaaas.mbg.model.AcContract">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ac_contract (c_unicode, room_id, user_id, 
      username, fee_status, fee_order_id, 
      is_transfer, pre_tenant, is_renew, 
      pre_contract_id, status, create_time, 
      modify_time, contract_file_url)
    values (#{cUnicode,jdbcType=VARCHAR}, #{roomId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{username,jdbcType=VARCHAR}, #{feeStatus,jdbcType=TINYINT}, #{feeOrderId,jdbcType=INTEGER}, 
      #{isTransfer,jdbcType=TINYINT}, #{preTenant,jdbcType=VARCHAR}, #{isRenew,jdbcType=TINYINT}, 
      #{preContractId,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{contractFileUrl,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gbtech.iaaas.mbg.model.AcContract">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ac_contract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cUnicode != null">
        c_unicode,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="feeStatus != null">
        fee_status,
      </if>
      <if test="feeOrderId != null">
        fee_order_id,
      </if>
      <if test="isTransfer != null">
        is_transfer,
      </if>
      <if test="preTenant != null">
        pre_tenant,
      </if>
      <if test="isRenew != null">
        is_renew,
      </if>
      <if test="preContractId != null">
        pre_contract_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="contractFileUrl != null">
        contract_file_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cUnicode != null">
        #{cUnicode,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="feeStatus != null">
        #{feeStatus,jdbcType=TINYINT},
      </if>
      <if test="feeOrderId != null">
        #{feeOrderId,jdbcType=INTEGER},
      </if>
      <if test="isTransfer != null">
        #{isTransfer,jdbcType=TINYINT},
      </if>
      <if test="preTenant != null">
        #{preTenant,jdbcType=VARCHAR},
      </if>
      <if test="isRenew != null">
        #{isRenew,jdbcType=TINYINT},
      </if>
      <if test="preContractId != null">
        #{preContractId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="contractFileUrl != null">
        #{contractFileUrl,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gbtech.iaaas.mbg.model.AcContractExample" resultType="java.lang.Long">
    select count(*) from ac_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ac_contract
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cUnicode != null">
        c_unicode = #{record.cUnicode,jdbcType=VARCHAR},
      </if>
      <if test="record.roomId != null">
        room_id = #{record.roomId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.feeStatus != null">
        fee_status = #{record.feeStatus,jdbcType=TINYINT},
      </if>
      <if test="record.feeOrderId != null">
        fee_order_id = #{record.feeOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.isTransfer != null">
        is_transfer = #{record.isTransfer,jdbcType=TINYINT},
      </if>
      <if test="record.preTenant != null">
        pre_tenant = #{record.preTenant,jdbcType=VARCHAR},
      </if>
      <if test="record.isRenew != null">
        is_renew = #{record.isRenew,jdbcType=TINYINT},
      </if>
      <if test="record.preContractId != null">
        pre_contract_id = #{record.preContractId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.contractFileUrl != null">
        contract_file_url = #{record.contractFileUrl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update ac_contract
    set id = #{record.id,jdbcType=INTEGER},
      c_unicode = #{record.cUnicode,jdbcType=VARCHAR},
      room_id = #{record.roomId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      fee_status = #{record.feeStatus,jdbcType=TINYINT},
      fee_order_id = #{record.feeOrderId,jdbcType=INTEGER},
      is_transfer = #{record.isTransfer,jdbcType=TINYINT},
      pre_tenant = #{record.preTenant,jdbcType=VARCHAR},
      is_renew = #{record.isRenew,jdbcType=TINYINT},
      pre_contract_id = #{record.preContractId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      contract_file_url = #{record.contractFileUrl,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ac_contract
    set id = #{record.id,jdbcType=INTEGER},
      c_unicode = #{record.cUnicode,jdbcType=VARCHAR},
      room_id = #{record.roomId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      fee_status = #{record.feeStatus,jdbcType=TINYINT},
      fee_order_id = #{record.feeOrderId,jdbcType=INTEGER},
      is_transfer = #{record.isTransfer,jdbcType=TINYINT},
      pre_tenant = #{record.preTenant,jdbcType=VARCHAR},
      is_renew = #{record.isRenew,jdbcType=TINYINT},
      pre_contract_id = #{record.preContractId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gbtech.iaaas.mbg.model.AcContract">
    update ac_contract
    <set>
      <if test="cUnicode != null">
        c_unicode = #{cUnicode,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="feeStatus != null">
        fee_status = #{feeStatus,jdbcType=TINYINT},
      </if>
      <if test="feeOrderId != null">
        fee_order_id = #{feeOrderId,jdbcType=INTEGER},
      </if>
      <if test="isTransfer != null">
        is_transfer = #{isTransfer,jdbcType=TINYINT},
      </if>
      <if test="preTenant != null">
        pre_tenant = #{preTenant,jdbcType=VARCHAR},
      </if>
      <if test="isRenew != null">
        is_renew = #{isRenew,jdbcType=TINYINT},
      </if>
      <if test="preContractId != null">
        pre_contract_id = #{preContractId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="contractFileUrl != null">
        contract_file_url = #{contractFileUrl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.gbtech.iaaas.mbg.model.AcContract">
    update ac_contract
    set c_unicode = #{cUnicode,jdbcType=VARCHAR},
      room_id = #{roomId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      fee_status = #{feeStatus,jdbcType=TINYINT},
      fee_order_id = #{feeOrderId,jdbcType=INTEGER},
      is_transfer = #{isTransfer,jdbcType=TINYINT},
      pre_tenant = #{preTenant,jdbcType=VARCHAR},
      is_renew = #{isRenew,jdbcType=TINYINT},
      pre_contract_id = #{preContractId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      contract_file_url = #{contractFileUrl,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gbtech.iaaas.mbg.model.AcContract">
    update ac_contract
    set c_unicode = #{cUnicode,jdbcType=VARCHAR},
      room_id = #{roomId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      fee_status = #{feeStatus,jdbcType=TINYINT},
      fee_order_id = #{feeOrderId,jdbcType=INTEGER},
      is_transfer = #{isTransfer,jdbcType=TINYINT},
      pre_tenant = #{preTenant,jdbcType=VARCHAR},
      is_renew = #{isRenew,jdbcType=TINYINT},
      pre_contract_id = #{preContractId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>